/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
    _type: "sanity.imagePaletteSwatch";
    background?: string;
    foreground?: string;
    population?: number;
    title?: string;
};

export type SanityImagePalette = {
    _type: "sanity.imagePalette";
    darkMuted?: SanityImagePaletteSwatch;
    lightVibrant?: SanityImagePaletteSwatch;
    darkVibrant?: SanityImagePaletteSwatch;
    vibrant?: SanityImagePaletteSwatch;
    dominant?: SanityImagePaletteSwatch;
    lightMuted?: SanityImagePaletteSwatch;
    muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
    _type: "sanity.imageDimensions";
    height?: number;
    width?: number;
    aspectRatio?: number;
};

export type Geopoint = {
    _type: "geopoint";
    lat?: number;
    lng?: number;
    alt?: number;
};

export type VideoLoop = {
    _type: "videoLoop";
    video?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        _type: "file";
    };
    posterImage?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    fullwidth?: boolean;
    autoplay?: boolean;
    alignment?: "left" | "center" | "right";
    maxHeight?: number;
    caption?: string;
    backgroundColor?: Color;
};

export type Video = {
    _type: "video";
    video?: string;
    size?: "medium" | "big" | "full";
    noBottomMargin?: boolean;
    backgroundColor?: Color;
};

export type ThumbnailGroup = {
    _type: "thumbnailGroup";
    images?: Array<{
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    }>;
    noBottomMargin?: boolean;
    backgroundColor?: Color;
    caption?: string;
};

export type TextOnly = {
    _type: "textOnly";
    placeholder?: boolean;
};

export type Slideshow = {
    _type: "slideshow";
    images?: Array<{
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    }>;
    autoplay?: boolean;
    noBottomMargin?: boolean;
};

export type SingleImage = {
    _type: "singleImage";
    image?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    noBottomMargin?: boolean;
    linkUrl?: string;
    fullwidth?: boolean;
    alignment?: "left" | "center" | "right";
    maxHeight?: number;
    caption?: string;
    backgroundColor?: Color;
};

export type Related = {
    _type: "related";
    relatedArticles?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "article";
    }>;
};

export type Map = {
    _type: "map";
    embedCode?: string;
};

export type ImageGroup = {
    _type: "imageGroup";
    images?: Array<{
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    }>;
    noBottomMargin?: boolean;
    linkUrl?: string;
    alignment?: "left" | "center" | "right";
    fullwidth?: boolean;
    maxHeight?: number;
    backgroundColor?: Color;
    caption?: string;
};

export type Flipshow = {
    _type: "flipshow";
    images?: Array<{
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
    }>;
    noBottomMargin?: boolean;
};

export type Audio = {
    _type: "audio";
    audio?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        _type: "file";
    };
    title?: string;
    link?: string;
    image?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    backgroundColor?: Color;
    foregroundColor?: Color;
    autoplay?: boolean;
    hidden?: boolean;
};

export type ArbitraryEmbed = {
    _type: "arbitraryEmbed";
    embedCode?: string;
};

export type SatelliteSite = {
    _id: string;
    _type: "satelliteSite";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    editorialState?: "preview" | "live";
    title?: string;
    mainImage?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    customFont?: boolean;
    landing?: {
        enabled?: boolean;
        showTitle?: boolean;
        landingImage?: {
            asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
        };
    };
    header?: {
        showExternalLogo?: boolean;
        externalLogo?: {
            asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
        };
        usePresentsLayout?: boolean;
        presentedByNovembre?: boolean;
        novembreMediaPartner?: boolean;
        externalName?: string;
    };
    background?: {
        backgroundImage?: {
            asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
        };
        backgroundColor?: Color;
    };
    metadata?: {
        mainImage?: {
            asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
        };
        description?: string;
    };
    content?: Array<({
        _key: string;
    } & Content) | ({
        _key: string;
    } & SingleImage) | ({
        _key: string;
    } & ImageGroup) | ({
        _key: string;
    } & ThumbnailGroup) | ({
        _key: string;
    } & VideoLoop) | ({
        _key: string;
    } & Video) | ({
        _key: string;
    } & Slideshow) | ({
        _key: string;
    } & Flipshow) | ({
        _key: string;
    } & Audio) | ({
        _key: string;
    } & Map)>;
    slug?: Slug;
};

export type ShopSlide = {
    asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "Image";
    _key: string;
} | {
    asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    _type: "Video";
    _key: string;
};

export type ProductList = {
    _id: string;
    _type: "productList";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    products?: Array<{
      size: "full" | "half" | "third";
      product: Product;
      _key: string;
    }>;
  };

export type Product = {
    _id: string;
    _type: "product";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    editorialState?: "preview" | "live";
    title?: string;
    shopifyId?: string;
    backgroundColor?: Color;
    mainImage?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    mainVideo?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        _type: "file";
    };
    Slideshow?: ShopSlide[];
    content?: Content;
    slug?: Slug;
    listingSize?: "full" | "half" | "third";
};

export type Meta = {
    _id: string;
    _type: "meta";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    about?: Content;
    credits?: {
        columnOne?: Content;
        columnTwo?: Content;
        columnThree?: Content;
    };
    contact?: Content;
    digest?: Content;
    socialMedia?: Content;
    magazine?: Content;
    magazineColor?: Color;
    bureau?: Content;
    bureauColor?: Color;
    feed?: Content;
    feedColor?: Color;
    shop?: Content;
    shopColor?: Color;
    shopPlaceholderImage?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    showMailingListOverlay?: boolean;
};

export type Content = {
    _type: "content";
    content?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal" | "introduction" | "small" | "blockquote";
        listItem?: never;
        markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | ({
        _key: string;
    } & ImageGroup) | ({
        _key: string;
    } & Slideshow) | ({
        _key: string;
    } & Video) | ({
        _key: string;
    } & Audio) | ({
        _key: string;
    } & ArbitraryEmbed)>;
};

export type Banner = {
    _id: string;
    _type: "banner";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    editorialState?: "preview" | "live";
    title?: string;
    link?: string;
    image?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    video?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        _type: "file";
    };
    imagePhone?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    videoPhone?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        _type: "file";
    };
    placeInMenu?: boolean;
    placeInFeed?: boolean;
    positionInFeed?: number;
    placeAsOverlay?: boolean;
    placeAsSidebarInAll?: boolean;
    placeAsSidebarInSelected?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "article";
    }>;
};

export type Article = {
    _id: string;
    _type: "article";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    editorialState?: "preview" | "live";
    title?: string;
    slug?: Slug;
    publicationDate?: string;
    stickied?: boolean;
    taxonomy?: Taxonomy;
    mainImage?: {
        asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
    };
    relatedSlideshow?: {
        image?: {
            asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
        };
        textColor?: Color;
    };
    preview?: Array<({
        _key: string;
    } & SingleImage) | ({
        _key: string;
    } & ImageGroup) | ({
        _key: string;
    } & VideoLoop) | ({
        _key: string;
    } & Slideshow) | ({
        _key: string;
    } & TextOnly)>;
    previewColors?: PreviewColors;
    content?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
        }>;
        style?: "normal" | "introduction" | "small" | "interview-question" | "blockquote";
        listItem?: never;
        markDefs?: Array<{
            href?: string;
            previewImage?: {
                asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
            };
            _type: "link";
            _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
    } | ({
        _key: string;
    } & ImageGroup) | ({
        _key: string;
    } & Slideshow) | ({
        _key: string;
    } & Video) | ({
        _key: string;
    } & VideoLoop) | ({
        _key: string;
    } & Audio) | ({
        _key: string;
    } & ArbitraryEmbed)>;
    related?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "article";
    }>;
    adTag?: string;
};

export type PreviewColors = {
    _type: "previewColors";
    backgroundColor?: Color;
    textColor?: "black" | "white" | "custom";
    customTextColor?: Color;
};

export type SanityFileAsset = {
    _id: string;
    _type: "sanity.fileAsset";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    originalFilename?: string;
    label?: string;
    title?: string;
    description?: string;
    altText?: string;
    sha1hash?: string;
    extension?: string;
    mimeType?: string;
    size?: number;
    assetId?: string;
    uploadId?: string;
    path?: string;
    url?: string;
    source?: SanityAssetSourceData;
};

export type SanityImageCrop = {
    _type: "sanity.imageCrop";
    top?: number;
    bottom?: number;
    left?: number;
    right?: number;
};

export type SanityImageHotspot = {
    _type: "sanity.imageHotspot";
    x?: number;
    y?: number;
    height?: number;
    width?: number;
};

export type SanityImageAsset = {
    _id: string;
    _type: "sanity.imageAsset";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    originalFilename?: string;
    label?: string;
    title?: string;
    description?: string;
    altText?: string;
    sha1hash?: string;
    extension?: string;
    mimeType?: string;
    size?: number;
    assetId?: string;
    uploadId?: string;
    path?: string;
    url?: string;
    metadata?: SanityImageMetadata;
    source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
    _type: "sanity.assetSourceData";
    name?: string;
    id?: string;
    url?: string;
};

export type SanityImageMetadata = {
    _type: "sanity.imageMetadata";
    location?: Geopoint;
    dimensions?: SanityImageDimensions;
    palette?: SanityImagePalette;
    lqip?: string;
    blurHash?: string;
    hasAlpha?: boolean;
    isOpaque?: boolean;
};

export type Taxonomy = {
    _type: "taxonomy";
    category?: "magazine" | "bureau";
    subCategory?: "reportage" | "motion" | "words" | "features" | "guest-features" | "sounds" | "creative-direction" | "workshop" | "entertainment";
    tags?: Array<string>;
};

export type Slug = {
    _type: "slug";
    current?: string;
    source?: string;
};

export type Color = {
    _type: "color";
    hex?: string;
    alpha?: number;
    hsl?: HslaColor;
    hsv?: HsvaColor;
    rgb?: RgbaColor;
};

export type RgbaColor = {
    _type: "rgbaColor";
    r?: number;
    g?: number;
    b?: number;
    a?: number;
};

export type HsvaColor = {
    _type: "hsvaColor";
    h?: number;
    s?: number;
    v?: number;
    a?: number;
};

export type HslaColor = {
    _type: "hslaColor";
    h?: number;
    s?: number;
    l?: number;
    a?: number;
};
export declare const internalGroqTypeReferenceTo: unique symbol;

